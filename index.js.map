{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport { linkEl } from '../main';\nconst URL_PIXABAY = 'https://pixabay.com/api/';\nconst API_KEY = '46219346-243694830f7cca451bf7f7da0';\nconst PER_PAGE = 15;\n// робимо запит , збрираю url string , якщо все ок то повертаю дані у вигляді [{}], якщо не ок то генерую помилку та\n// очищаю innerHTML в ul\n// export function fetchImages(query) {\n//   return fetch(`${URL_PIXABAY}?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true\n// `)\n//     .then(response => {\n//       if (!response.ok) {\n//         linkEl.list.innerHTML = '';\n//         throw new Error(\n//           `Error fetching images: ${response.status} ${response.statusText}`\n//         );\n//       }\n//       return response.json();\n//     })\n//     .then(data => data.hits);\n// }\n\nexport async function fetchImages(query, page = 1) {\n    // використовуємо обєкт параметрів пошуку\n\n    const searchParams = new URLSearchParams({\n        q: query,\n        per_page: PER_PAGE,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page,\n    });\n\n    const url = `${URL_PIXABAY}?key=${API_KEY}&${searchParams}}`;\n\n    const response = await axios.get(url);\n\n    if (response.data.hits.length === 0) {\n        const msg = 'Не знайшлося відповідного контенту, спробуйте знову';\n        throw new Error(msg);\n    }\n\n    return response.data;\n}\n","import { linkEl } from '../main';\nconst listEl = document.querySelector('.gallery');\nexport function photoMarkup(data) {\n    linkEl.list.innerHTML = data.hits\n        .map(\n            ({\n                webformatURL,\n                largeImageURL,\n                tags,\n                likes,\n                views,\n                comments,\n                downloads,\n            }) => `\n            <li class=\"gallery-item\">\n                <a href=\"${largeImageURL}\" class=\"gallery-link\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"gallery-image\" />\n                </a>\n                <div class=\"info\">\n                    <p class=\"info-item\"><span>Likes</span> ${likes}</p>\n                    <p class=\"info-item\"><span>Views</span> ${views}</p>\n                    <p class=\"info-item\"><span>Comments</span> ${comments}</p>\n                    <p class=\"info-item\"><span>Downloads</span> ${downloads}</p>\n                </div>\n            </li>\n        `\n        )\n        .join('');\n}\n","// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Описаний у документації\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport axios from 'axios';\n\nimport { fetchImages } from './js/pixabay-api';\nimport { photoMarkup } from './js/render-functions';\n\nexport const linkEl = {\n    form: document.querySelector('.form'),\n    loader: document.querySelector('.loader'),\n    list: document.querySelector('.gallery'),\n    loadMoreBtn: document.querySelector('.load-more-btn'),\n};\n\nlinkEl.form.addEventListener('submit', formHandler);\nlinkEl.loadMoreBtn.addEventListener('click', loadMoreBtnHandler);\n\n//\n//  для галереї\nlet gallery = new SimpleLightbox('.gallery a');\n//\n// пагінація\nlet pageCount = 1;\nlet query = null;\n//\n\n// обробник кнопки дозавантаження\nasync function loadMoreBtnHandler(e) {\n    e.preventDefault();\n\n    pageCount += 1;\n    const data = await fetchImages(query, pageCount);\n    photoMarkup(data);\n}\n\n//\nasync function formHandler(e) {\n    e.preventDefault();\n    const form = e.currentTarget;\n    //  очищаємо вміст перед новим запитом\n\n    linkEl.list.innerHTML = '';\n    // отримуємо значення запиту від користувача, оновлюємо змінну та перевіряємо його\n    query = e.target.elements['search-area'].value.trim();\n\n    if (query === '') {\n        iziToast.error({\n            position: 'topRight',\n            message: 'Введіть будь-ласка значення для пошуку',\n        });\n        return;\n    }\n\n    // перед запитом показуємо лоадер\n\n    linkEl.loader.classList.add('active');\n\n    // робимо запит\n    try {\n        const data = await fetchImages(query);\n\n        photoMarkup(data);\n\n        linkEl.loader.classList.remove('active');\n        gallery.refresh();\n        linkEl.loadMoreBtn.classList.remove('is-hidden');\n    } catch (error) {\n        linkEl.loader.classList.remove('active');\n        linkEl.loadMoreBtn.classList.add('is-hidden');\n\n        linkEl.list.innerHTML = '';\n\n        iziToast.error({\n            position: 'topRight',\n            message: error.message,\n        });\n    } finally {\n        form.reset();\n    }\n    // await fetchImages(query)\n    // обробка запиту , позначили що прийшла data , ховаю лоадер та обробляємо негативний кейс\n    // .then(data => {\n    //   linkEl.loader.classList.remove('active');\n    //   if (data.hits.length === 0) {\n    //     linkEl.list.innerHTML = '';\n    //     iziToast.error({\n    //       position: 'topRight',\n    //       message:\n    //         'Sorry, there are no images matching your search query. Please try again!',\n    //     });\n    //     return;\n    //   }\n    //   // отримали дані та прокидуємо їх в функцію для створення розмітки\n    //   photoMarkup(data);\n    //   linkEl.loadMoreBtn.classList.remove('is-hidden');\n    //   gallery.refresh();\n    // })\n    // .catch(error => {\n    //   linkEl.loadMoreBtn.classList.add('is-hidden');\n    //   linkEl.loader.classList.remove('active');\n    //   linkEl.list.innerHTML = '';\n    //   iziToast.error({\n    //     position: 'topRight',\n    //     message: error,\n    //   });\n    // });\n}\n"],"names":["URL_PIXABAY","API_KEY","PER_PAGE","fetchImages","query","page","searchParams","url","response","axios","msg","photoMarkup","data","linkEl","webformatURL","largeImageURL","tags","likes","views","comments","downloads","formHandler","loadMoreBtnHandler","gallery","SimpleLightbox","pageCount","e","form","iziToast","error"],"mappings":"owBAEA,MAAMA,EAAc,2BACdC,EAAU,qCACVC,EAAW,GAkBV,eAAeC,EAAYC,EAAOC,EAAO,EAAG,CAG/C,MAAMC,EAAe,IAAI,gBAAgB,CACrC,EAAGF,EACH,SAAUF,EACV,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAAG,CACR,CAAK,EAEKE,EAAM,GAAGP,CAAW,QAAQC,CAAO,IAAIK,CAAY,IAEnDE,EAAW,MAAMC,EAAM,IAAIF,CAAG,EAEpC,GAAIC,EAAS,KAAK,KAAK,SAAW,EAAG,CACjC,MAAME,EAAM,sDACZ,MAAM,IAAI,MAAMA,CAAG,CACtB,CAED,OAAOF,EAAS,IACpB,CC3Ce,SAAS,cAAc,UAAU,EACzC,SAASG,EAAYC,EAAM,CAC9BC,EAAO,KAAK,UAAYD,EAAK,KACxB,IACG,CAAC,CACG,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CAChB,IAAkB;AAAA;AAAA,2BAESL,CAAa;AAAA,gCACRD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,8DAGIC,CAAK;AAAA,8DACLC,CAAK;AAAA,iEACFC,CAAQ;AAAA,kEACPC,CAAS;AAAA;AAAA;AAAA,SAIlE,EACA,KAAK,EAAE,CAChB,CCbO,MAAMP,EAAS,CAClB,KAAM,SAAS,cAAc,OAAO,EACpC,OAAQ,SAAS,cAAc,SAAS,EACxC,KAAM,SAAS,cAAc,UAAU,EACvC,YAAa,SAAS,cAAc,gBAAgB,CACxD,EAEAA,EAAO,KAAK,iBAAiB,SAAUQ,CAAW,EAClDR,EAAO,YAAY,iBAAiB,QAASS,CAAkB,EAI/D,IAAIC,EAAU,IAAIC,EAAe,YAAY,EAGzCC,EAAY,EACZrB,EAAQ,KAIZ,eAAekB,EAAmBI,EAAG,CACjCA,EAAE,eAAc,EAEhBD,GAAa,EACb,MAAMb,EAAO,MAAMT,EAAYC,EAAOqB,CAAS,EAC/Cd,EAAYC,CAAI,CACpB,CAGA,eAAeS,EAAYK,EAAG,CAC1BA,EAAE,eAAc,EAChB,MAAMC,EAAOD,EAAE,cAOf,GAJAb,EAAO,KAAK,UAAY,GAExBT,EAAQsB,EAAE,OAAO,SAAS,aAAa,EAAE,MAAM,OAE3CtB,IAAU,GAAI,CACdwB,EAAS,MAAM,CACX,SAAU,WACV,QAAS,wCACrB,CAAS,EACD,MACH,CAIDf,EAAO,OAAO,UAAU,IAAI,QAAQ,EAGpC,GAAI,CACA,MAAMD,EAAO,MAAMT,EAAYC,CAAK,EAEpCO,EAAYC,CAAI,EAEhBC,EAAO,OAAO,UAAU,OAAO,QAAQ,EACvCU,EAAQ,QAAO,EACfV,EAAO,YAAY,UAAU,OAAO,WAAW,CAClD,OAAQgB,EAAO,CACZhB,EAAO,OAAO,UAAU,OAAO,QAAQ,EACvCA,EAAO,YAAY,UAAU,IAAI,WAAW,EAE5CA,EAAO,KAAK,UAAY,GAExBe,EAAS,MAAM,CACX,SAAU,WACV,QAASC,EAAM,OAC3B,CAAS,CACT,QAAc,CACNF,EAAK,MAAK,CACb,CA4BL"}